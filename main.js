(()=>{var t={13:(t,e,a)=>{const r=a(113);t.exports=class{constructor(){this.board=this.createGrid(),this.allShips=[],this.createGrid()}createGrid(){this.board=[];for(let t=0;t<10;t++){this.board[t]=[];for(let e=0;e<10;e++)this.board[t].push({hasShip:"",isShot:!1})}}placeShip(t,e,a){let o=e[0],s=e[1];const n=this.getShipId(),i=new r(t,n);this.allShips.push(i);for(let e=0;e<t;e++)this.board[o][s].hasShip=n,"vertical"===a?o++:s++}recieveAttack(t,e){if(!this.board[t][e].isShot&&(this.board[t][e].isShot=!0,this.checkHasShip(t,e))){const a=this.getAttackedShip(t,e);a.hit([t,e]),a.checkSunkState()}}checkShipPlacementValidity(t,e,a,r){let o=e,s=a;for(let e=0;e<t;e++){if(""!==this.board[o][s].hasShip)return!1;"vertical"===r?o++:"horizontal"===r&&s++}return!0}getShipId(){return this.allShips.length}checkHasShip(t,e){return""!==this.board[t][e].hasShip}getAttackedShip(t,e){const a=Number(this.board[t][e].hasShip);return this.allShips[a]}checkAllShipsAreSunk(){return this.allShips.filter((t=>t.isSunk)).length===this.allShips.length}}},926:(t,e,a)=>{const r=a(13);t.exports=class{constructor(t){this.name=t,this.gameboard=new r,this.moves=[],this.smartMoves=[]}attack(t,e,a){t.gameboard.recieveAttack(e,a)}restartPlayer(){this.moves=[],this.smartMoves=[],this.gameboard=new r}}},113:t=>{t.exports=class{constructor(t,e){this.shipId=e,this.length=t,this.hits=[],this.isSunk=!1}hit(t){this.hits.push(t)}checkSunkState(){this.length===this.hits.length&&(this.isSunk=!0)}}}},e={};function a(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,a),s.exports}(()=>{"use strict";const t=(()=>{const t=(t,e)=>{const a=JSON.stringify(e);return t.some((t=>JSON.stringify(t)===a))},e=a=>{console.log("getRandomCoord");let r=`0${Math.floor(100*Math.random())}`;r=r.slice(-2);const o=r.split("").map(Number);return t(a.moves,o)?e(a):(a.moves.push(o),o)};return{getCoord:t=>{if(0!==t.smartMoves.length){const e=t.smartMoves[0];return t.moves.push(e),t.smartMoves.shift(),e}return e(t)},calculateNextBestCoord:(e,a,r)=>{const o=r[0],s=r[1];if(""===a.gameboard.board[o][s].hasShip)return;const n=[[o,s+1],[o,s-1],[o+1,s],[o-1,s]];n.slice().forEach((a=>{if(console.log(a),console.log("forEach"),a[0]<0||a[0]>9||a[1]<0||a[1]>9){console.log("minus outside range");const t=n.findIndex((t=>JSON.stringify(t)===JSON.stringify(a)));n.splice(t,1)}if(t(e.moves,a)){console.log("already played");const t=n.findIndex((t=>JSON.stringify(t)===JSON.stringify(a)));n.splice(t,1)}})),n.forEach((t=>{e.smartMoves.push(t)}))}}})(),e=(()=>{const t=t=>{t.dataTransfer.setData("text",t.target.className),console.log("dragging")},e=t=>{console.log(t.target.className.includes("ship-mark")),t.dataTransfer.getData("text"),t.target.className.includes("ship-mark")?t.target.classList.add("can-not-drop"):(t.target.classList.add("can-drop"),t.preventDefault())},a=t=>{console.log(t.target.classList),t.target.draggable=!1,t.target.classList.remove("can-not-drop"),t.target.classList.remove("can-drop")},r=t=>{const e=t.dataTransfer.getData("text");t.target.className=e,t.target.draggable=!0,t.preventDefault()};return{activateDragStartEvent:()=>{document.querySelectorAll("[draggable=true]").forEach((e=>{e.addEventListener("dragstart",t)}))},activateDragOverEvent:t=>{t.addEventListener("dragleave",a),t.addEventListener("dragover",e)},activateDropEvent:t=>{t.addEventListener("drop",r)}}})(),r=(()=>{const t=t=>t[0]>9||t[1]>9||t[0]<0||t[1]<0,e=(a,r,o)=>{let s,n;return"horizontal"===o?(s=Math.floor(10*Math.random()),n=Math.floor(Math.random()*(10-r))):(s=Math.floor(Math.random()*(10-r)),n=Math.floor(10*Math.random())),((e,a,r,o)=>{let s=!1,n=a[0],i=a[1];for(let a=0;a<r;a++){const a=[[n+1,i],[n-1,i],[n,i+1],[n,i-1],[n-1,i-1],[n-1,i+1],[n+1,i+1],[n+1,i-1]].filter((e=>!t(e)));for(let t=0;t<a.length;t++){const r=a[t][0],o=a[t][1];""!==e.gameboard.board[r][o].hasShip&&(s=!0)}""!==e.gameboard.board[n][i].hasShip&&(s=!0),"horizontal"===o?i++:n++}return s})(a,[s,n],r,o)?e(a,r,o):[s,n]};return{placeShipRandomly:t=>{[5,4,3,2,2,1].forEach((a=>{const r=["horizontal","vertical"][Math.floor(2*Math.random())],o=e(t,a,r);t.gameboard.placeShip(a,o,r)}))}}})(),o=(()=>{const t=(t,e,a)=>{"computer"===t.name?document.querySelector(`#computer-grid [data-row="${e}"][data-col="${a}"]`).classList.add("red-mark"):document.querySelector(`#human-grid [data-row="${e}"][data-col="${a}"]`).classList.add("red-mark")},a=(t,e,a)=>{"computer"===t.name?document.querySelector(`#computer-grid [data-row="${e}"][data-col="${a}"]`).classList.add("missed-mark"):document.querySelector(`#human-grid [data-row="${e}"][data-col="${a}"]`).classList.add("missed-mark")},r=(t,e,a,r)=>{if("computer"===t.name)document.querySelector(`#computer-grid [data-row="${e}"][data-col="${a}"]`).classList.add("ship-mark");else{const t=document.querySelector(`#human-grid [data-row="${e}"][data-col="${a}"]`);t.classList.add(`ship-mark${r}`),t.draggable=!0}},o=t=>{const e=t.gameboard.allShips.filter((t=>!1===t.isSunk));document.querySelector(`.${t.name}-side .ship-num`).textContent=`Ships Remaining: ${e.length}`},s=()=>{const t=document.getElementById("human-grid"),a=document.getElementById("computer-grid");for(let r=0;r<10;r++)for(let o=0;o<10;o++){const s=document.createElement("div");s.classList.add("tile"),s.dataset.row=r,s.dataset.col=o;const n=document.createElement("div");n.classList.add("tile"),n.dataset.row=r,n.dataset.col=o,e.activateDragOverEvent(n),e.activateDropEvent(n),t.appendChild(n),a.appendChild(s)}};return{createBoard:s,render:e=>{for(let o=0;o<10;o++)for(let s=0;s<10;s++){e.gameboard.board[o][s].isShot&&""!==e.gameboard.board[o][s].hasShip?t(e,o,s):e.gameboard.board[o][s].isShot&&""===e.gameboard.board[o][s].hasShip&&a(e,o,s);const n=e.gameboard.board[o][s].hasShip;""!==n&&"human"===e.name&&r(e,o,s,n)}o(e)},declareWinner:t=>{const e=document.querySelector(".announcement");"computer"===t.name?e.textContent="You Lose!":e.textContent="You Won!"},updateRemainingShip:o,toggleBoard:t=>{"human"===t.name?document.querySelector(".human-side #human-grid").classList.toggle("fade"):document.querySelector(".computer-side #computer-grid").classList.toggle("fade")},restartBoard:()=>{document.getElementById("human-grid").textContent="",document.getElementById("computer-grid").textContent="",document.querySelectorAll(".ship-num").forEach((t=>{t.textContent="Ships Remaining: 6"})),s()}}})(),s=a(926),n=(()=>{const a=new s("human"),n=new s("computer"),i=()=>{r.placeShipRandomly(a),r.placeShipRandomly(n),o.render(a),e.activateDragStartEvent(),o.render(n)},d=(t,e)=>{e.gameboard.checkAllShipsAreSunk()&&(o.declareWinner(t),o.toggleBoard(t),o.toggleBoard(e))};return{startGame:i,startAttackRound:(e,r)=>{a.attack(n,e,r),o.render(n),d(a,n);const s=t.getCoord(n,a);t.calculateNextBestCoord(n,a,s),n.attack(a,s[0],s[1]),o.render(a),d(n,a)},restartGame:()=>{o.restartBoard(),o.toggleBoard(a),o.toggleBoard(n),a.restartPlayer(),n.restartPlayer(),i()}}})(),i=(()=>{const t=()=>{document.querySelectorAll("#computer-grid .tile").forEach((t=>{t.addEventListener("click",(t=>{const e=Number(t.target.dataset.row),a=Number(t.target.dataset.col);n.startAttackRound(e,a)}))}))};return{startButtonEvent:()=>{document.getElementById("start").addEventListener("click",(()=>{n.startGame(),t()})),document.getElementById("restart").addEventListener("click",(()=>{n.restartGame(),t()}))}}})();o.createBoard(),i.startButtonEvent()})()})();